/* Generated By:JavaCC: Do not edit this line. FldwCompilerConstants.java */
package javacc;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface FldwCompilerConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LINE_COMMIT = 6;
  /** RegularExpression Id. */
  int SEMIC = 7;
  /** RegularExpression Id. */
  int COMMA = 8;
  /** RegularExpression Id. */
  int LBR = 9;
  /** RegularExpression Id. */
  int RBR = 10;
  /** RegularExpression Id. */
  int RCBR = 11;
  /** RegularExpression Id. */
  int LCBR = 12;
  /** RegularExpression Id. */
  int RSBR = 13;
  /** RegularExpression Id. */
  int LSBR = 14;
  /** RegularExpression Id. */
  int PLUS = 15;
  /** RegularExpression Id. */
  int MINUS = 16;
  /** RegularExpression Id. */
  int MULT = 17;
  /** RegularExpression Id. */
  int DIV = 18;
  /** RegularExpression Id. */
  int MOD = 19;
  /** RegularExpression Id. */
  int LOGIC_EQUAL = 20;
  /** RegularExpression Id. */
  int LOGIC_NOT = 21;
  /** RegularExpression Id. */
  int LOGIC_AND = 22;
  /** RegularExpression Id. */
  int LOGIC_OR = 23;
  /** RegularExpression Id. */
  int LEFT = 24;
  /** RegularExpression Id. */
  int RIGHT = 25;
  /** RegularExpression Id. */
  int LEFT_EQUAL = 26;
  /** RegularExpression Id. */
  int RIGHT_EQUAL = 27;
  /** RegularExpression Id. */
  int IF = 28;
  /** RegularExpression Id. */
  int ELSE = 29;
  /** RegularExpression Id. */
  int WHILE = 30;
  /** RegularExpression Id. */
  int FOR = 31;
  /** RegularExpression Id. */
  int FUNC = 32;
  /** RegularExpression Id. */
  int FLOWING = 33;
  /** RegularExpression Id. */
  int MATCHING = 34;
  /** RegularExpression Id. */
  int HASHTAG = 35;
  /** RegularExpression Id. */
  int EXLM = 36;
  /** RegularExpression Id. */
  int IMPORT = 37;
  /** RegularExpression Id. */
  int DOT = 38;
  /** RegularExpression Id. */
  int INT_VALUE = 39;
  /** RegularExpression Id. */
  int DOUBLE_VALUE = 40;
  /** RegularExpression Id. */
  int BOOL_VALUE = 41;
  /** RegularExpression Id. */
  int STRING_VALUE = 46;
  /** RegularExpression Id. */
  int NULL_VALUE = 47;
  /** RegularExpression Id. */
  int SYMBOL = 48;
  /** RegularExpression Id. */
  int OTHER = 49;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_STRING = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<LINE_COMMIT>",
    "\";\"",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\"}\"",
    "\"{\"",
    "\"]\"",
    "\"[\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"==\"",
    "\"!=\"",
    "\"&&\"",
    "\"||\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"for\"",
    "\"function\"",
    "\"|\"",
    "\"->\"",
    "\"#\"",
    "\"!\"",
    "\"import\"",
    "\".\"",
    "<INT_VALUE>",
    "<DOUBLE_VALUE>",
    "<BOOL_VALUE>",
    "\"\\\"\"",
    "<token of kind 43>",
    "<token of kind 44>",
    "<token of kind 45>",
    "\"\\\"\"",
    "\"null\"",
    "<SYMBOL>",
    "<OTHER>",
  };

}
