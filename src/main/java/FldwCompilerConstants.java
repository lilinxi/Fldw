/* Generated By:JavaCC: Do not edit this line. FldwCompilerConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface FldwCompilerConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LINE_COMMIT = 6;
  /** RegularExpression Id. */
  int SEMIC = 7;
  /** RegularExpression Id. */
  int COMMA = 8;
  /** RegularExpression Id. */
  int LBR = 9;
  /** RegularExpression Id. */
  int RBR = 10;
  /** RegularExpression Id. */
  int RCBR = 11;
  /** RegularExpression Id. */
  int LCBR = 12;
  /** RegularExpression Id. */
  int RSBR = 13;
  /** RegularExpression Id. */
  int LSBR = 14;
  /** RegularExpression Id. */
  int ASSIGN = 15;
  /** RegularExpression Id. */
  int PLUS = 16;
  /** RegularExpression Id. */
  int MINUS = 17;
  /** RegularExpression Id. */
  int MULT = 18;
  /** RegularExpression Id. */
  int DIV = 19;
  /** RegularExpression Id. */
  int MOD = 20;
  /** RegularExpression Id. */
  int INC = 21;
  /** RegularExpression Id. */
  int DEC = 22;
  /** RegularExpression Id. */
  int EXLM = 23;
  /** RegularExpression Id. */
  int LOGIC_EQUAL = 24;
  /** RegularExpression Id. */
  int LOGIC_NOT = 25;
  /** RegularExpression Id. */
  int LOGIC_AND = 26;
  /** RegularExpression Id. */
  int LOGIC_OR = 27;
  /** RegularExpression Id. */
  int LEFT = 28;
  /** RegularExpression Id. */
  int RIGHT = 29;
  /** RegularExpression Id. */
  int LEFT_EQUAL = 30;
  /** RegularExpression Id. */
  int RIGHT_EQUAL = 31;
  /** RegularExpression Id. */
  int IF = 32;
  /** RegularExpression Id. */
  int ELSE = 33;
  /** RegularExpression Id. */
  int WHILE = 34;
  /** RegularExpression Id. */
  int FUNC = 35;
  /** RegularExpression Id. */
  int FUNC_IN = 36;
  /** RegularExpression Id. */
  int FUNC_OUT = 37;
  /** RegularExpression Id. */
  int FLOW = 38;
  /** RegularExpression Id. */
  int ITER = 39;
  /** RegularExpression Id. */
  int IMPORT = 40;
  /** RegularExpression Id. */
  int INT_VALUE = 41;
  /** RegularExpression Id. */
  int DOUBLE_VALUE = 42;
  /** RegularExpression Id. */
  int BOOL_VALUE = 43;
  /** RegularExpression Id. */
  int STRING_VALUE = 48;
  /** RegularExpression Id. */
  int SYMBOL = 49;
  /** RegularExpression Id. */
  int OTHER = 50;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_STRING = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<LINE_COMMIT>",
    "\";\"",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\"}\"",
    "\"{\"",
    "\"]\"",
    "\"[\"",
    "\"=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"++\"",
    "\"--\"",
    "\"!\"",
    "\"==\"",
    "\"!=\"",
    "\"&&\"",
    "\"||\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"function\"",
    "\"in\"",
    "\"out\"",
    "\"|\"",
    "\"->\"",
    "\"import\"",
    "<INT_VALUE>",
    "<DOUBLE_VALUE>",
    "<BOOL_VALUE>",
    "\"\\\"\"",
    "<token of kind 45>",
    "<token of kind 46>",
    "<token of kind 47>",
    "\"\\\"\"",
    "<SYMBOL>",
    "<OTHER>",
  };

}
